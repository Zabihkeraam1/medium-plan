version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_NAME}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: 512M

  backend:
    build: ./backend
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}"
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 1G
    restart: unless-stopped

  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:8000"
    ports:
      - "3000:3000"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 1.5G
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /opt/medium-plan/postgres-data
      o: bind
