name: Deploy to EC2

on:
  push:
    branches: [ master ]

env:
  DOCKER_COMPOSE_VERSION: 1.29.2
  PROJECT_NAME: "medium-plan"
  FRONTEND_PORT: 3000
  BACKEND_PORT: 8000
  DOMAIN: 54.236.65.244
  PROJECT_DIR: "/home/ubuntu/app/${PROJECT_NAME}"
  POSTGRES_DATA_DIR: "/opt/${PROJECT_NAME}/postgres-data"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Load environment variables
        uses: falti/dotenv-action@v1
        with:
          env-file: .env

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./"
          target:  "/home/ubuntu/app/${{ PROJECT_NAME}}"

      - name: Run auto-deploy.sh on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            chmod +x "${{ env.PROJECT_DIR }}/devops/auto-deploy.sh"
            "${{ env.PROJECT_DIR }}/devops/auto-deploy.sh" "${{ env.PROJECT_NAME }}" "${{ env.FRONTEND_PORT }}" "${{ env.BACKEND_PORT }}" "${{ env.DOMAIN }}"

      # - name: Copy nginx config
      #   uses: appleboy/scp-action@master
      #   with:
      #     host: ${{ secrets.EC2_INSTANCE_IP }}
      #     username: ubuntu
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     source: "devops/craftapp.conf"
      #     target: "/home/ubuntu/"
      #     strip_components: 1
      #     tar_tmp_path: ""

      - name: Move nginx config with sudo
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # sudo mv /home/ubuntu/craftapp.conf /etc/nginx/sites-enabled/
            # sudo chown root:root /etc/nginx/sites-enabled/craftapp.conf
            # sudo chmod 644 /etc/nginx/sites-enabled/craftapp.conf
            sudo nginx -t && sudo systemctl reload nginx


      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Exit immediately if any command fails
            # Setup database directory
            sudo mkdir -p "${{ env.POSTGRES_DATA_DIR }}"
            sudo chown -R 1000:1000 "${{ env.POSTGRES_DATA_DIR }}"
            sudo chmod -R 755 "/opt/${{ env.PROJECT_NAME }}"
            # Set secure permissions for .env files
            cd "${{ env.PROJECT_DIR }}"
            sudo chmod +x init-db.sh
            sudo chmod 644 frontend/.env
            sudo chmod 644 backend/.env
            # Clean up and deploy with explicit env file
            docker-compose --env-file backend/.env down || true
            docker system prune -f
            docker-compose --env-file backend/.env up -d --build
            
            # Wait for PostgreSQL to initialize
            sleep 10
            # docker-compose exec postgres sh /docker-entrypoint-initdb.d/init-db.sh
